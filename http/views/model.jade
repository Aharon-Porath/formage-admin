script
  var startIndex = #{start};
  $(document).ready(function(){

        $('#go_button').click(function(){
            var action_id = $('.actions').val();
            if(action_id)
            {
                var ids = [];
                 $('.select_row input[type=checkbox]:checked').each(function(){
                     ids.push($(this).parents('tr').attr('elm_id'));
                 });

                 $.post('#{rootPath}/json/model/#{modelName}/action/' + action_id ,{ids:ids},function(data){

                     window.location.href = window.location.href;
                 });
             }
        });

        $('tbody').sortable({
                        update:function()
                        {
                        /*var new_li = $('li.new_li',list).remove();
                        new_li.appendTo(list);
                            var i = 0;
                            $('>li',this).each(function(){
                                var li = this;
                                //                   if($(this).is('.new_li'))
                                //                       return;
                                $('[name]',li).each(function() {
                                    var input = $(this);
                                    input.attr('name',input.attr('name').replace(RegExp(name + '_li[0-9]+_'),name + '_li' + i + '_'));
                                });
                                i++;
                            });
                            */
                            if($('p.buttons button#reorder').length == 0)
                            {
                                var save_button = $('<button id="reorder" type="button">Save order</button>').click(function(){
                                    var data = {};
                                    $('tr:has(td.sortable)').each(function(index,ui){
                                        var id = $(this).attr('elm_id');
                                        data[id] = index + startIndex;
                                    });
                                    $.post('#{rootPath}/json/model/#{modelName}/order',data,function(err){
                                        alert('saved');
                                    });
                                    $(this).remove();
                                }).appendTo('p.buttons');

                            }
                        },
                        items:'tr:has(td.sortable)',
                        handle:'div.nf_listfield_drag'
                    });
  });
div#content.container_16.clearfix
  div#page-heading
    h1 #{modelName}
  - if(actions.length) {
      p actions:
        select.actions
          option(value='') -
          - for (var i=0; i<actions.length; i++) {
            option(value='#{actions[i].value}') #{actions[i].label}
          - }

        <button id="go_button">GO</button>
  - }
  div.grid_11
    table
      tr
        th &nbsp;
        - if (sortable) {
          th &nbsp;
        - }
        - for (var i = 0; i < listFields.length; i++) {
          th.table-header-repeat.line-left.minwidth-1
            a(href='#') #{listFields[i]}
        - }
        - if (cloneable)
          th &nbsp;
      - for (var j = 0; j < documents.length; j++) {
        tr(elm_id="#{documents[j]._id}")
          - if (sortable) {
            td.sortable.select_row(style='padding-right:0px;')
              input(type='checkbox')
              div.nf_listfield_drag(style='float:left')
          - }else{
            td.select_row(style='padding-right:0px;')
              input(type='checkbox')
          - }
          - for (var k = 0; k < listFields.length; k++) {
            td
              a(href='#{rootPath}/model/#{modelName}/document/#{documents[j]._id}') #{documents[j][listFields[k]]}&nbsp;
          - }
          - if ( cloneable) {
            td
              a(href='#{rootPath}/model/#{modelName}/document/#{documents[j]._id}?clone=true') Duplicate
          - }
      - }
    p
      | Viewing #{start + 1} - #{start + documents.length} of #{totalCount}
      | &nbsp;&nbsp;-&nbsp;&nbsp;Page:&nbsp;
      - for (var i = 0, page = 1; i < totalCount; i += count, page++)
        - if (start == i)
          #{page}
        - else
          a(href='#{rootPath}/model/#{modelName}?start=#{i}') #{page}
        &nbsp;
    p.buttons
      | <a href='#{rootPath}/model/#{modelName}/document/new'>Create new <em>"#{modelName}"</em> item...</a>
  div.grid_5
    h2 Recent Activity
    p
      | This is not implemented
